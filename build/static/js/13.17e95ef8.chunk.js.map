{"version":3,"sources":["pages/DetailPage.js"],"names":["DetailPage","React","memo","props","dispatch","useDispatch","id","match","params","post_list","useSelector","state","post","list","post_idx","findIndex","p","post_id","parseInt","useEffect","postActions","getOnePostAX","chat_user_list","logger","user_info","user","is_me","user_id","getPostAX","getDetailPostUserListAX","Fragment","minHeight","margin","shape","title","height"],"mappings":"uLAWMA,EAAaC,IAAMC,MAAK,SAACC,GAC7B,IAAMC,EAAWC,cAGXC,EAAKH,EAAMI,MAAMC,OAAOF,GACxBG,EAAYC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,QAC9CC,EAAWL,EAAUM,WAAU,SAACC,GAAD,OAAOA,EAAEC,UAAYC,SAASZ,MAC7DM,EAAOH,EAAUK,GAEvBb,IAAMkB,WAAU,WACdf,EAASgB,IAAYC,aAAaf,MACjC,IAGH,IAAMgB,EAAiBZ,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKU,kBAEzDC,YAAO,yCAAYD,GAGnB,IAAME,EAAYd,aAAY,SAACC,GAAD,OAAWA,EAAMc,KAAKA,QAC9CC,GAAY,OAAJd,QAAI,IAAJA,OAAA,EAAAA,EAAMe,YAAN,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAWG,SAU3C,OARA1B,IAAMkB,WAAU,WACVP,IAGJR,EAASgB,IAAYQ,UAAU,iBAC/BxB,EAASgB,IAAYS,wBAAwBX,SAASZ,QACrD,IAGD,eAAC,IAAMwB,SAAP,WACE,cAAC,IAAD,eAAY3B,IACZ,eAAC,IAAD,CACE4B,UAAU,QACVC,OAAO,SAFT,UAIE,eAAC,IAAD,CAAMC,MAAM,YAAZ,UACE,cAAC,IAAD,2BAAY9B,GAAZ,IAAmB8B,MAAM,iCAAzB,gBACGrB,QADH,IACGA,OADH,EACGA,EAAMsB,SAET,cAAC,IAAD,CAAMC,OAAO,cAGdvB,GACC,cAAC,IAAD,2BAAgBA,GAAhB,IAAsBU,eAAgBA,EAAgBI,MAAOA,cAOxD1B","file":"static/js/13.17e95ef8.chunk.js","sourcesContent":["// post 자세히 보기(post 상세, 채팅에 참여 중인 사용자 목록, 배달 식당 지도 표시)\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Grid } from \"../elements\";\nimport { Header, DetailPost, PcSide } from \"../components\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\n\n// 개발환경 console.log() 관리용\nimport logger from \"../shared/Console\";\n\nconst DetailPage = React.memo((props) => {\n  const dispatch = useDispatch();\n\n  // 전체 post list에서 선택한 post찾기\n  const id = props.match.params.id;  \n  const post_list = useSelector((state) => state.post.list);\n  const post_idx = post_list.findIndex((p) => p.post_id === parseInt(id));\n  const post = post_list[post_idx];\n  \n  React.useEffect(() => {\n    dispatch(postActions.getOnePostAX(id));\n  }, [])\n\n  // 채팅방 참여 중인 사용자들\n  const chat_user_list = useSelector((state) => state.post.chat_user_list);\n\n  logger(\"디테일페이지 -\", chat_user_list);\n  \n  // 내가 쓴 글인지 확인\n  const user_info = useSelector((state) => state.user.user);\n  const is_me = post?.user_id === user_info?.user_id ? true : false;\n\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n    dispatch(postActions.getPostAX(\"전체\"));\n    dispatch(postActions.getDetailPostUserListAX(parseInt(id)));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <PcSide {...props}/>\n      <Grid\n        minHeight=\"100vh\"\n        margin=\"0 auto\"\n      >\n        <Grid shape=\"container\">\n          <Header {...props} shape=\"상세페이지\">\n            {post?.title}\n          </Header>\n          <Grid height=\"4.4rem\" />\n        </Grid>\n\n        {post && (\n          <DetailPost {...post} chat_user_list={chat_user_list} is_me={is_me} />\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n});\n\nexport default DetailPage;\n"],"sourceRoot":""}