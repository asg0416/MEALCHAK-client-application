{"version":3,"sources":["pages/Main.js"],"names":["Main","props","media","useMediaQuery","color","theme","btn_border","border","fontSize","dispatch","useDispatch","user","useSelector","state","post_list","post","list","rank_list","rank","is_loading","React","useState","ctg","setCtg","recent","nearBy","sort","setSort","all","kr","bunsik","cn","jp","west","cafe","etc","category","setCategory","useEffect","document","querySelector","scrollTo","top","left","behavior","length","user_address","postActions","getPostAX","getRankDB","swiperRef","useRef","mainRef","qaRef","useDetectOutsideClick","isActive","setIsActive","is_address","imageActions","setMask","Fragment","ref","minHeight","margin","padding","shape","feedback","width","height","radius","bg","position","bottom","z_index","cursor","_onClick","FeedbackBtn","src","isWebpSupported","webp","UnionWebp","png","Union","size","bold","feedbackWebp","className","style","text_align","absolute","small","href","target","rel","bg0","bg40","history","push","is_flex4","flex_direction","justify_content","minWidth","bold2","line_height","bg80","searchWebp","search","is_float","maxWidth","bg100","scrollToCategory","current","scrollIntoView","getCategory","value","getCtg","getSort","flex","align_items","slidesPerView","transform","textAlign","base","border_bottom","white_space","e","innerText","Hr","is_flex2","map","p","idx","key","post_id","is_flex_column","LogoImg","emptyHome_3xWebp","emptyHome_3x","defaultProps","styled","hr","div"],"mappings":"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","file":"static/js/15.e9f72d52.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Grid, Text, Button, Image } from \"../elements\";\nimport { Post, Footer, Header, MainBanner, PcSide } from \"../components\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useDetectOutsideClick } from \"../components/useDetectOutsideClick\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../redux/configureStore\";\nimport logger from \"../shared/Console\";\n\nimport theme from \"../styles/theme\";\nimport \"../components/style.css\";\n\n// 이미지\nimport { png } from \"../styles/img/index\";\nimport { webp } from \"../styles/img/webp/index\";\nimport { isWebpSupported } from \"react-image-webp/dist/utils\";\n\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\nimport \"swiper/components/pagination/pagination.scss\";\nimport \"../shared/Swiper.scss\";\n\nconst Main = (props) => {\n  const media = useMediaQuery(\"(min-width: 950px)\");\n\n  const { color, border, btn_border, fontSize } = theme;\n\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.user.user);\n  const post_list = useSelector((state) => state.post?.list);\n  const rank_list = useSelector((state) => state.post?.rank);\n  const is_loading = useSelector((state) => state.user.is_loading);\n\n  const [ctg, setCtg] = React.useState(\"\");\n  const [sort, setSort] = React.useState({\n    recent: true,\n    nearBy: false,\n  });\n  const [category, setCategory] = React.useState({\n    all: true,\n    kr: false,\n    bunsik: false,\n    cn: false,\n    jp: false,\n    west: false,\n    cafe: false,\n    etc: false,\n  });\n\n  const [start, setStart] = React.useState(true);\n  React.useEffect(() => {\n    document\n      .querySelector(\"body\")\n      .scrollTo({ top: 0, left: 0, behavior: \"instant\" });\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostAX(\"전체\"));\n      setCtg(\"전체\");\n      dispatch(postActions.getRankDB());\n      return;\n    }\n    if (user?.user_address) {\n      dispatch(postActions.getPostAX(\"전체\"));\n      setCtg(\"전체\");\n      dispatch(postActions.getRankDB());\n      return;\n    }\n  }, []);\n\n  const swiperRef = React.useRef(null);\n  const mainRef = React.useRef(null);\n  const scrollToCategory = () => {\n    swiperRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const qaRef = React.useRef(null);\n  const [isActive, setIsActive] = useDetectOutsideClick(qaRef, false);\n  const onClick = () => {\n    setIsActive(!isActive);\n  };\n\n  React.useEffect(() => {\n    const is_address =\n      user?.user_address === \"여기를 클릭해서 주소를 설정하세요!\"\n        ? true\n        : false;\n    dispatch(imageActions.setMask(is_address));\n  }, [user?.user_address]);\n\n  return (\n    <React.Fragment>\n      <PcSide {...props} />\n      <div ref={mainRef}></div>\n      <Grid\n        minHeight=\"100vh\"\n        margin=\"0 auto\"\n        padding={media ? \"0\" : \"0 0 5.2rem 0\"}\n      >\n        <Grid shape=\"container\">\n          <Header {...props} shape=\"홈\">\n            {user?.user_address}\n          </Header>\n          <Footer {...props}></Footer>\n          <Button\n            feedback\n            width=\"5rem\"\n            height=\"5rem\"\n            radius=\"2.5rem\"\n            bg=\"rgba(255, 204,151, 0.6)\"\n            position=\"fixed\"\n            border=\"none\"\n            padding=\"0\"\n            margin={media ? \"0 0 0 29.3rem\" : \"0 0 0 29.5rem\"}\n            bottom={media ? \"1rem\" : \"6rem\"}\n            z_index=\"100\"\n            cursor=\"t\"\n            _onClick={onClick}\n          >\n            {isActive ? (\n              <FeedbackBtn src={isWebpSupported() ? webp.UnionWebp : png.Union}>\n                <Text size=\"2.4rem\" bold color=\"#fff\" margin=\"0.1rem 0 0 0\">\n                  !\n                </Text>\n              </FeedbackBtn>\n            ) : (\n              <FeedbackBtn\n                src={isWebpSupported() ? webp.feedbackWebp : png.feedback}\n              />\n            )}\n          </Button>\n          <div className=\"link-container\">\n            <nav\n              ref={qaRef}\n              className={`link ${isActive ? \"active\" : \"inactive\"}`}\n              style={media ? { bottom: \"6.7rem\" } : { bottom: \"11.5rem\" }}\n            >\n              <Grid\n                width=\"fit-content\"\n                height=\"fit-content\"\n                radius=\"inherit\"\n                text_align=\"center\"\n                absolute=\"relative\"\n              >\n                <Text size={fontSize.small}>밀착에서의 경험은 어떠셨나요!</Text>\n                <Text size={fontSize.small}>\n                  여러분의 소중한 의견에 귀 기울이겠습니다.\n                </Text>\n                <Text size={fontSize.small}>\n                  <a\n                    href=\"https://forms.gle/j2616Jgt3toPf4Dd8\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    후기 및 의견 작성하기\n                  </a>\n                </Text>\n              </Grid>\n            </nav>\n          </div>\n        </Grid>\n        <Grid width=\"36rem\" margin=\"0 auto\">\n          <Button\n            width=\"32rem\"\n            height=\"4.4rem\"\n            margin=\"0 1.8rem\"\n            bg={color.bg0}\n            border={btn_border.bg40}\n            radius=\"1.2rem\"\n            cursor=\"t\"\n            _onClick={() => {\n              history.push(\"/search\");\n            }}\n          >\n            <Grid\n              is_flex4=\"t\"\n              flex_direction=\"row\"\n              justify_content=\"space-between\"\n              padding=\"0.2rem 1.4rem 0\"\n            >\n              <Text\n                minWidth=\"17rem\"\n                height=\"2rem\"\n                size={fontSize.small}\n                bold2=\"400\"\n                line_height=\"150%\"\n                color={color.bg80}\n                text_align=\"left\"\n              >\n                오늘은 어떤 음식을 배달 시킬까?\n              </Text>\n              <Image\n                size=\"2.4\"\n                src={isWebpSupported() ? webp.searchWebp : png.search}\n                margin=\"0 0 0.4rem\"\n              />\n            </Grid>\n          </Button>\n        </Grid>\n        <Grid is_float=\"left\">\n          <Grid\n            width=\"fit-content\"\n            maxWidth=\"fit-content\"\n            padding=\"2.4rem 0 0 2.1rem\"\n          >\n            <Text size=\"1.6rem\" color={color.bg100} bold>\n              #오늘의 인기 메뉴\n            </Text>\n          </Grid>\n          <MainBanner\n            scrollToCategory={scrollToCategory}\n            {...rank_list}\n            category={category}\n            getCategory={(value) =>\n              setCategory({ ...{ category: false }, ...value })\n            }\n            getCtg={(value) => setCtg(value)}\n            getSort={() => setSort({ ...{ sort: false }, recent: true })}\n          />\n          <Grid height=\"0.8rem\" bg=\"#f4f4f3\" />\n          <div ref={swiperRef}></div>\n        </Grid>\n        <Grid\n          maxWidth=\"34.9rem\"\n          height=\"4.5rem\"\n          margin={media ? \"0 0 0 2rem\" : \"0 0 0 2.8rem\"}\n          flex\n          flex_direction=\"row\"\n          align_items=\"center\"\n          padding=\"2rem 0 1.6rem 0\"\n        >\n          <Swiper\n            className=\"category\"\n            slidesPerView=\"7.55\"\n            style={{ transform: \"none\" }}\n          >\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size={fontSize.base}\n                color={category.all ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                // margin=\"-0.4rem 0rem 0.1rem 0.5rem\"\n                margin=\"-0.4rem 1.6rem 0.1rem 0rem\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.all ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, all: true });\n                  setCtg(e.target.innerText);\n                }}\n              >\n                전체\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.kr ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.kr ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, kr: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                한식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.bunsik ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.bunsik ? \"0.2rem solid black\" : \"none\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, bunsik: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                분식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.cn ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.cn ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, cn: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                중식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.jp ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.jp ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, jp: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                일식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.west ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category?.west ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, west: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                양식\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.cafe ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.cafe ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, cafe: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                카페\n              </Text>\n            </SwiperSlide>\n            <SwiperSlide style={{ width: \"fit-content\", textAlign: \"center\" }}>\n              <Text\n                width=\"fit-content\"\n                height=\"2.4rem\"\n                size=\"1.6rem\"\n                color={category.etc ? color.bg100 : color.bg80}\n                bold\n                cursor=\"t\"\n                margin=\"-0.4rem 1.6rem 0 0\"\n                padding=\"1.6rem 0 2.8rem 0\"\n                border_bottom={category.etc ? \"0.2rem solid black\" : \"\"}\n                white_space=\"nowrap\"\n                _onClick={(e) => {\n                  dispatch(postActions.getPostAX(e.target.innerText));\n                  setCategory({ ...{ category: false }, etc: true });\n                  setCtg(e.target.innerText);\n                  setSort({ ...{ sort: false }, recent: true });\n                }}\n              >\n                기타\n              </Text>\n            </SwiperSlide>\n          </Swiper>\n        </Grid>\n        <Hr />\n        <Grid is_flex2 maxWidth=\"32rem\" margin=\"1.6rem auto\">\n          <Grid>\n            <Text size=\"1.3rem\" color=\"#9A9896\" bold2=\"500\">\n              정렬 기준\n            </Text>\n          </Grid>\n          <Grid flex justify_content=\"flex-end\">\n            <Text\n              size=\"1.3rem\"\n              color={sort?.recent ? \"#ff9425\" : \"#cecac7\"}\n              bold\n              cursor=\"t\"\n              // getPostAX(category, sort=\"recent\") - 기본 정렬(sort)값이 recent(마감임박순)\n              _onClick={() => {\n                setSort({ ...{ sort: false }, recent: true });\n                dispatch(postActions.getPostAX(ctg));\n              }}\n            >\n              마감임박순\n            </Text>\n            <Text\n              size=\"1.3rem\"\n              color={sort?.nearBy ? \"#ff9425\" : \"#cecac7\"}\n              bold\n              margin=\"0 0 0 1rem\"\n              cursor=\"t\"\n              _onClick={() => {\n                setSort({ ...{ sort: false }, nearBy: true });\n                dispatch(postActions.getPostAX(ctg, \"nearBy\"));\n              }}\n            >\n              거리순\n            </Text>\n          </Grid>\n        </Grid>\n        <Grid>\n          {post_list?.length > 0 ? (\n            post_list.map((p, idx) => {\n              if (category.all) {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.kr && p.category === \"한식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.bunsik && p.category === \"분식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.cn && p.category === \"중식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.jp && p.category === \"일식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.west && p.category === \"양식\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.cafe && p.category === \"카페\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              if (category.etc && p.category === \"기타\") {\n                return <Post {...p} key={p.post_id} />;\n              }\n              return null;\n            })\n          ) : (\n            <React.Fragment>\n              <Grid>\n                <Grid is_flex_column height=\"20rem\" margin=\"3.2rem 0 0 0\">\n                  <LogoImg\n                    src={\n                      isWebpSupported()\n                        ? webp.emptyHome_3xWebp\n                        : png.emptyHome_3x\n                    }\n                  ></LogoImg>\n                </Grid>\n                <Text\n                  size={fontSize.base}\n                  color={color.bg80}\n                  text_align=\"center\"\n                >\n                  설정한 주소 근처에 올라온 글이 없어요!\n                </Text>\n              </Grid>\n            </React.Fragment>\n          )}\n          {post_list.length === 0 && <Grid height=\"8.4rem\" />}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nMain.defaultProps = {};\n\nconst Hr = styled.hr`\n  width: 36rem;\n  height: 0.1rem;\n  background-color: #f4f4f3;\n  border: none;\n  margin: 0;\n`;\n\nconst LogoImg = styled.div`\n  margin: 0 auto 1rem auto;\n  background-image: url(\"${(props) => props.src}\");\n  width: 18.4rem;\n  height: 16.7rem;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst FeedbackBtn = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 3.4rem;\n  max-height: 3.6rem;\n  border-radius: 1rem;\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  background-position: center;\n  margin: 0.3rem 0 0 0;\n`;\n\nexport default Main;\n"],"sourceRoot":""}