{"version":3,"sources":["pages/UserProfile.js"],"names":["UserProfile","props","dispatch","useDispatch","location","useLocation","is_login","useSelector","state","user","other_user","anotherUser","user_id","userId","id","match","params","color","theme","fontSize","border","radius","React","useEffect","document","querySelector","scrollTo","top","left","behavior","userAction","loginCheck","findUserProfileAX","logger","Fragment","minHeight","margin","shape","height","Profile","user_profile","width","size","large","bg100","bold","line_height","text_align","overflow","text_overflow","white_space","display","user_nickname","small","style","whiteSpace","user_comment","user_info","button","bg","bg0","cursor","_onClick","history","push","pathname","profile","nickname","base","brand100","padding","bold2","user_review","length","map","p","idx","key","MyReviewImg","src","isWebpSupported","webp","emptyMeal_3xWebp","png","emptyMeal_3x","MyReviewText","defaultProps","styled","div"],"mappings":"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","file":"static/js/25.88831774.chunk.js","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { history } from \"../redux/configureStore\";\nimport { actionCreators as userAction } from \"../redux/modules/user\";\n\nimport { MyOneReview } from \"../components\";\nimport Spinner from \"../shared/Spinner\";\n\n// style\nimport { Button, Grid, Text } from \"../elements\";\nimport { Header, ProfileTab, PcSide } from \"../components\";\nimport styled from \"styled-components\";\nimport theme from \"../styles/theme\";\nimport logger from \"../shared/Console\";\n\n// 이미지\nimport { png } from \"../styles/img/index\";\nimport { webp } from \"../styles/img/webp/index\";\nimport { isWebpSupported } from \"react-image-webp/dist/utils\";\n\nconst UserProfile = (props) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const is_login = useSelector((state) => state.user?.is_login);\n  const other_user = useSelector((state) => state.user?.anotherUser);\n  const user_id = location.state?.user_id\n    ? location.state.user_id\n    : location.state.userId;\n  const id = props.match.params.id;\n  const { color, border, fontSize, radius } = theme;\n\n  React.useEffect(() => {\n    document\n      .querySelector(\"body\")\n      .scrollTo({ top: 0, left: 0, behavior: \"instant\" });\n\n    dispatch(userAction.loginCheck());\n    dispatch(userAction.findUserProfileAX(user_id));\n    logger(\"UserProfile props state: \", location.state);\n    logger(\"UserProfile props: \", props);\n    logger(\"another_user_info: \", other_user);\n    logger(\"id : \", typeof id);\n  }, []);\n\n  React.useEffect(() => {\n    dispatch(userAction.findUserProfileAX(id));\n  }, [dispatch, props.match.params.id]);\n\n  if (is_login) {\n    return (\n      <React.Fragment>\n        <PcSide {...props} />\n        <Grid\n          // maxWidth=\"36rem\"\n          minHeight=\"100vh\"\n          // border={border.line1}\n          margin=\"0 auto\"\n        >\n          <Grid shape=\"container\">\n            <Header {...props} shape=\"프로필\" />\n            <Grid height=\"4.4rem\" />\n\n            <Grid margin=\"1.6rem auto 2rem\">\n              <Profile user_profile={other_user?.user_profile}></Profile>\n            </Grid>\n            <Grid margin=\"0 auto\">\n              <Text\n                width=\"auto\"\n                size={fontSize.large}\n                color={color.bg100}\n                bold\n                line_height=\"150%\"\n                text_align=\"center\"\n                overflow=\"hidden\"\n                text_overflow=\"ellipsis\"\n                white_space=\"nowrap\"\n                display=\"block\"\n              >\n                {other_user?.user_nickname}\n              </Text>\n              <Grid\n                width=\"24rem\"\n                text_align=\"center\"\n                margin=\"0.5rem auto 0 auto\"\n              >\n                <Text size={fontSize.small} color=\"#9A9896\" line_height=\"150%\">\n                  <span style={{ whiteSpace: \"pre-wrap\" }}>\n                    {other_user?.user_comment ? other_user?.user_comment : \"\"}\n                  </span>\n                </Text>\n              </Grid>\n            </Grid>\n            {/* 매너점수, 성별, 연령 */}\n            <ProfileTab user_info={other_user} />\n\n            <Grid width=\"32rem\" height=\"5rem\" margin=\"0 auto\">\n              <Button\n                width=\"32rem\"\n                height=\"5rem\"\n                radius={radius.button}\n                border=\"0.1rem solid #EBE9E8\"\n                bg={color.bg0}\n                margin=\"0 0 6.4rem 0\"\n                cursor=\"t\"\n                _onClick={() => {\n                  history.push({\n                    pathname: \"/write\",\n                    state: {\n                      user_id: other_user?.user_id,\n                      profile: other_user?.user_profile,\n                      nickname: other_user?.user_nickname,\n                    },\n                  });\n                }}\n              >\n                <Text\n                  width=\"30.4rem\"\n                  height=\"2.4rem\"\n                  bold\n                  size={fontSize.base}\n                  line_height=\"150%\"\n                  text_align=\"center\"\n                  color={color.brand100}\n                >\n                  리뷰 남기기\n                </Text>\n              </Button>\n            </Grid>\n            <Grid height=\"1.6rem\" />\n            <Grid padding=\"0 0 0 2rem\" margin=\"0\">\n              <Text\n                bold2=\"700\"\n                size={fontSize.base}\n                line_height=\"150%\"\n                color={color.bg100}\n              >\n                함께 밀착한 사용자들이 남긴 리뷰\n              </Text>\n            </Grid>\n            {other_user?.user_review.length !== 0 ? (\n              other_user?.user_review.map((p, idx) => {\n                return <MyOneReview other_user {...p} key={idx} />;\n              })\n            ) : (\n              <Grid width=\"36rem\" margin=\"0 auto\">\n                <MyReviewImg\n                  src={\n                    isWebpSupported() ? webp.emptyMeal_3xWebp : png.emptyMeal_3x\n                  }\n                ></MyReviewImg>\n                <MyReviewText>아직 받은 리뷰가 없어요.</MyReviewText>\n              </Grid>\n            )}\n            <Grid height=\"6rem\" />\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  } else {\n    return <Spinner />;\n  }\n};\n\nUserProfile.defaultProps = {};\n\nconst Profile = styled.div`\n  margin: auto;\n  width: 10rem;\n  height: 10rem;\n  border-radius: 5rem;\n  ${(props) =>\n    props.user_profile\n      ? `background-image: url(${props.user_profile});`\n      : `background-image: url(http://115.85.182.57:8080/image/profileDefaultImg.jpg)`}\n  background-size: cover;\n  background-position: center;\n`;\n\nconst MyReviewImg = styled.div`\n  margin: 4.7rem auto 0 auto;\n  background-image: url(\"${(props) => props.src}\");\n  width: 20rem;\n  height: 11.7rem;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst MyReviewText = styled.div`\n  width: 36rem;\n  margin: 1rem auto 0 auto;\n  font-size: 1.6rem;\n  line-height: 150%;\n  text-align: center;\n  font-weight: 400;\n  color: #9a9896;\n`;\nexport default UserProfile;\n"],"sourceRoot":""}