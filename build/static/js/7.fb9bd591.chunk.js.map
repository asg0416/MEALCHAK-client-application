{"version":3,"sources":["../../src/index.js","../../src/ExifOrientationImg.js","../node_modules/exif-js/exif.js","../node_modules/exif2css/src/index.js","../node_modules/react-copy-to-clipboard/lib/index.js","../node_modules/react-copy-to-clipboard/lib/Component.js","../node_modules/copy-to-clipboard/index.js","../node_modules/toggle-selection/index.js"],"names":["snakeToCamelCaseKeys","obj","Object","keys","k","replace","m","ExifOrientationImg","state","orientation","args","event","otherArgs","imageElement","onLoad","this","windowImage","window","src","alt","style","imgProps","_onImageLoaded","bind","debug","EXIF","EXIFwrapped","module","exports","ExifTags","Tags","TiffTags","GPSTags","IFD1Tags","StringValues","ExposureProgram","MeteringMode","LightSource","Flash","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","img","exifdata","getImageData","callback","handleBinaryFile","binFile","data","findEXIFinJPEG","iptcdata","file","dataView","DataView","getUint8","offset","length","byteLength","isFieldSegmentStart","nameHeaderLength","readIPTCData","getUint16","findIPTCinJPEG","isXmpEnabled","xmpdata","self","dom","DOMParser","getStringFromDB","startOffset","sectionLength","xmpString","xmpEndIndex","indexOf","indexOfXmp","substring","slice","xml2Object","parseFromString","findXMPinJPEG","call","test","base64","contentType","match","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","base64ToArrayBuffer","fileReader","FileReader","onload","e","target","result","url","http","XMLHttpRequest","open","responseType","status","response","send","objectURLToBlob","blob","readAsArrayBuffer","Blob","File","readEXIFData","IptcFieldMap","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","hasOwnProperty","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","entries","tags","readTagValue","vals","val","n","numerator","denominator","type","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","tag","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","IFD1OffsetPointer","getNextIFDOffset","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","console","log","readThumbnailImage","xml2json","xml","json","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","undefined","textContent","message","enableXmp","disableXmp","getData","Image","HTMLImageElement","complete","getTag","getIptcTag","getAllTags","a","getAllIptcTags","pretty","strPretty","readFromBinaryFile","propMap","transformsMap","transformOriginMap","getValue","prop","value","exif2css","s","transforms","transform","ep","join","expandTransform","transformOrigin","allTransforms","o","expanded","expandTransforms","allTransformStrings","expandTransformStrings","css","CopyToClipboard","require","defineProperty","_react","_interopRequireDefault","_copyToClipboard","__esModule","_typeof","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectWithoutProperties","source","excluded","key","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_possibleConstructorReturn","_assertThisInitialized","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_setPrototypeOf","p","_defineProperty","_React$PureComponent","_getPrototypeOf2","_this","_len","arguments","_key","concat","_this$props","text","onCopy","options","elem","Children","only","onClick","protoProps","staticProps","subClass","superClass","create","_inherits","_this$props2","cloneElement","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread","PureComponent","deselectCurrent","clipboardToIE11Formatting","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","stopPropagation","format","preventDefault","clipboardData","warn","clearData","setData","body","appendChild","selectNodeContents","addRange","execCommand","Error","err","error","copyKey","navigator","userAgent","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","focus"],"mappings":"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","file":"static/js/7.fb9bd591.chunk.js","sourcesContent":["/* @flow */\nimport ExifOrientationImg from './ExifOrientationImg';\n\nexport default ExifOrientationImg;\n","/* @flow */\nimport React, { Component } from 'react';\nimport EXIF from 'exif-js';\nimport exif2css from 'exif2css';\n\nconst snakeToCamelCaseKeys = (obj: Object): Object =>\n  Object.keys(obj)\n    .map(k => ({\n      [k.replace(/(-\\w)/g, m => m[1].toUpperCase())]: obj[k],\n    }))\n    .reduce((a, b) => ({...a, ...b}), {});\n\nclass ExifOrientationImg extends Component {\n  props: Object;\n  state: {\n    orientation: ?number,\n  } = {\n    orientation: null,\n  };\n\n  _onImageLoaded(...args: any[]) {\n    const [event, ...otherArgs] = args;\n    const imageElement: HTMLImageElement = event.target;\n    const { onLoad } = this.props;\n\n    // Fix for an issue affecting exif-js: see https://github.com/exif-js/exif-js/issues/95\n    const windowImage = window.Image\n    window.Image = null;\n    \n    // Do the actual EXIF operations\n    if (!EXIF.getData(imageElement, () => {\n      this.setState({\n        orientation: EXIF.getTag(imageElement, 'Orientation'),\n      });\n      onLoad && onLoad(event, ...otherArgs);\n    })) {\n      onLoad && onLoad(event, ...otherArgs);\n    }\n\n    // Re-establish the reference\n    window.Image = windowImage;\n  }\n\n  render() {\n    const {\n      src,\n      alt,\n      style = {},\n      onLoad,\n      ...imgProps,\n    } = this.props;\n    const {\n      orientation,\n    } = this.state;\n\n    return (\n      <img\n        onLoad={this._onImageLoaded.bind(this)}\n        src={src}\n        alt={alt}\n        style={{\n          ...(\n            orientation ?\n              snakeToCamelCaseKeys(exif2css(orientation)) :\n              {}\n          ),\n          ...style,\n        }}\n        {...imgProps}\n      />\n    );\n  }\n}\n\nexport default ExifOrientationImg;\n","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n","const propMap = {\n  'r': 'rotate',\n  'ry': 'rotateY',\n  't': 'translateX',\n  'ty': 'translateY',\n}\n\nconst transformsMap = {\n  '2': {\n    'ry': 180,\n  },\n  '3': {\n    'r': 180,\n  },\n  '4': {\n    'r': 180,\n    'ry': 180,\n  },\n  '5': {\n    'r': 270,\n    'ry': 180,\n  },\n  '6': {\n    'ty': -1,\n    'r': 90,\n  },\n  '7': {\n    'ty': -1,\n    't': -1,\n    'r': 90,\n    'ry': 180,\n  },\n  '8': {\n    't': -1,\n    'r': 270,\n  },\n}\n\nconst transformOriginMap = {\n  '5': 'top left',\n  '6': 'bottom left',\n  '7': 'bottom right',\n  '8': 'top right',\n}\n\nfunction expandTransforms(transforms) {\n  const o = {}\n  let expanded = false\n  for (let prop in transforms) {\n    if (!expanded) expanded = true\n    var ep = propMap[prop]\n    o[ep] = transforms[prop]\n  }\n  return expanded ? o : null\n}\n\nfunction getValue(prop, value) {\n  if (prop === 'r' || prop === 'ry') {\n    return `${value}deg`\n  }\n  if (prop === 't' || prop === 'ty') {\n    return `${value * 100}%`\n  }\n}\n\nfunction expandTransform(transforms) {\n  const a = []\n  for (let prop in transforms) {\n    const ep = propMap[prop]\n    a.push(ep + '(' + getValue(prop, transforms[prop]) + ')')\n  }\n  return a.length ? a.join(' ') : null\n}\n\nfunction expandTransformStrings(transforms) {\n  const o = {}\n  let expanded = false\n  for (let prop in transforms) {\n    if (!expanded) expanded = true\n    const ep = propMap[prop]\n    o[ep] = ep + '(' + getValue(prop, transforms[prop]) + ')'\n  }\n  return expanded ? o : null\n}\n\n/**\n * Takes the input EXIF orientation and returns the CSS rules needed to display the image correctly in the browser.\n * @param {(number|string)} orientation The EXIF orientation.\n * @returns {Exif2CssReturn} An object with `transform`, `transform-origin` (not shown in JSDoc because of hyphen), `transforms` and `transformStrings` properties.\n */\nfunction exif2css(orientation) {\n  const s = `${orientation}`\n  const transforms = transformsMap[s]\n\n  const transform = expandTransform(transforms)\n  const transformOrigin = transformOriginMap[s]\n  const allTransforms = expandTransforms(transforms)\n  const allTransformStrings = expandTransformStrings(transforms)\n\n  const css = {}\n  if (transform) {\n    css['transform'] = transform\n  }\n  if (transformOrigin) {\n    css['transform-origin'] = transformOrigin\n  }\n  if (allTransforms) {\n    css['transforms'] = allTransforms\n  }\n  if (allTransformStrings) {\n    css['transformStrings'] = allTransformStrings\n  }\n  return css\n}\n\n/* documentary types/index.xml */\n/**\n * @typedef {Object} Exif2CssReturn The return type of the function.\n * @prop {string} [transform] The complete CSS `transform` rule that contains all transforms.\n * @prop {('top left'|'top right'|'bottom left'|'bottom right')} [transform-origin] The transform origin CSS rule for orientations >= 5.\n * @prop {{translateY: number, translateX: number, rotate: number, rotateY: number}} [transforms] The raw transforms as numbers, where translates are either `-1` or `1` and rotations are either `90`, `180` and `270`.\n * @prop {{translateY: string, translateX: string, rotate: string, rotateY: string}} [transformStrings] The transforms split by individual rules that can be applied in the browser.\n */\n\nexport default exif2css","\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  function CopyToClipboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CopyToClipboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, [\"text\", \"onCopy\", \"options\", \"children\"]);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return _react[\"default\"].cloneElement(elem, _objectSpread({}, props, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n"],"sourceRoot":""}